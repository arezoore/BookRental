@page "/RentedBooksList"
@rendermode InteractiveServer
@inject BookServices bookServices


<PageTitle>List of Books</PageTitle>

<div class="text_center">
@if (userBooks == null) {
  <p><em>At present, no books have been rented from the library.</em></p>
} else {
  <table class='table table-hover'>
    <thead>
      <tr>
        <th>Book Title</th>
        <th>Author Name</th>
        <th>Published Year</th>
        <th>User's Full Name</th>
        <th>Rental Start Date</th>
        <th>Rental Expiration Date</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var item in userBooks)
      {
          <tr>
            <td>@item.Book!.Title</td>
            <td>@item.Book!.AuthorName</td>
            <td>@item.Book!.PublishedYear</td>
            <td>@item.XtendUser!.FirstName  @item.XtendUser!.FamilyName</td>
            <td>@item.StartDate.ToShortDateString()</td>
            <td>@item.ExpDate.ToShortDateString()</td>
          </tr>

      }
    </tbody>
  </table>
}

</div>






@code {
    List<UserBook> userBooks = new List<UserBook>();
    protected override async Task OnInitializedAsync()
    {
        userBooks = await bookServices.GetRentedBookListAsync();

    }
}